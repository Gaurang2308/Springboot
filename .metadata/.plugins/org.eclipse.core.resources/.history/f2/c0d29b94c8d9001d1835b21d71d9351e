package com.employee.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.employee.helper.jwtUtil;
import com.employee.model.JwtRequest;
import com.employee.model.JwtResponse;
import com.employee.services.CustomUserDetailsService;

import net.bytebuddy.asm.Advice.This;

@RestController
public class JwtController {
	@Autowired
	private AuthenticationManager authoticationManager;
	
	
	@Autowired
	private CustomUserDetailsService customUserDetailsService;
	
	@Autowired
	private jwtUtil jwtUtil;
	
    @RequestMapping(value = "/token",method = RequestMethod.POST)
	public ResponseEntity<?> generateToken(@RequestBody JwtRequest jwtRequest)throws Exception{
    	System.out.println(jwtRequest);
    	try {
    		this.authoticationManager.authenticate(new UsernamePasswordAuthenticationToken(jwtRequest.getUsername(), jwtRequest.getPassword()));
			
		} catch (UsernameNotFoundException e) {
			e.printStackTrace();
			throw new Exception("Bad Credentials");
		}
    	 UserDetails userDetails = this.customUserDetailsService.loadUserByUsername(jwtRequest.getUsername());
    	String token = this.jwtUtil.generateToken(userDetails);
    	System.out.println("Jwt"+token);
    	return ResponseEntity.ok(new JwtResponse(token));
    }
}
