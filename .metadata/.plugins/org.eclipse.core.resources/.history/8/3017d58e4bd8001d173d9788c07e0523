package com.employee.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.employee.entity.Blog;

import com.employee.exception.ResourseNotFound;
import com.employee.repository.BlogRepository;


@RestController
@RequestMapping("/api/v1")
@CrossOrigin(origins = "http://localhost:46623")
public class BlogController {
	@Autowired
	public BlogRepository repository;
    
    @GetMapping("/Blogs")
    public List<Blog> getAllBlog(){
    	return repository.findAll();
    }
    
    @PostMapping("/Blogs")
    public Blog saveBlog(@RequestBody Blog blog) {
    	return repository.save(blog);
    }
    @GetMapping("/Blogs/{id}")
    public ResponseEntity<Blog> getBlogByID(@PathVariable int id){
    	Blog blog=repository.findById(id)
    			.orElseThrow(()-> new ResourseNotFound("no record found with this id:"+id));
    	return ResponseEntity.ok(blog);
    }
    @PutMapping("/Blogs/{id}")
    public ResponseEntity<Blog> updateBlog(@PathVariable int id,@RequestBody Blog blog){
    	Blog blog2=repository.findById(id)
    			.orElseThrow(()-> new ResourseNotFound("no record found with this id:"+id));
        blog2.setTitle(blog.getTitle());
        blog2.setDiscription(blog.getDiscription());
        blog2.setUrl(blog.getUrl());
        Blog updateBlog=repository.save(blog2);	
    	return ResponseEntity.ok(updateBlog);
    }
    @DeleteMapping("Blogs/{id}")
    public ResponseEntity<Map<String, Boolean>> deleteBlog(@PathVariable int id){
    	Blog blog=repository.findById(id)
    			.orElseThrow(()-> new ResourseNotFound("no record found with this id:"+id));
    	repository.delete(blog);
    	Map<String, Boolean>response=new HashMap<>();
    	response.put("deleted",Boolean.TRUE);
    	return ResponseEntity.ok(response);
    }

}
